-- MySQL Script generated by MySQL Workbench
-- Fri Mar  3 10:33:14 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Score`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Score` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre_buts` INT NULL,
  `type_victoire` VARCHAR(45) NULL,
  `bonus` INT NULL,
  `points` INT NULL,
  `nombre_buts_contre` INT NULL,
  `forfait` TINYINT(1) NULL,
  `gagnant_penalty` TINYINT(2) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `type_victoire_UNIQUE` (`type_victoire` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Rencontre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Rencontre` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `terrain` VARCHAR(45) NULL,
  `rang_planning` INT NULL,
  `heure` TIME(1) NULL,
  `init` TINYINT(1) NULL,
  `Score_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Score_id`),
  INDEX `fk_Rencontre_Score1_idx` (`Score_id` ASC),
  CONSTRAINT `fk_Rencontre_Score1`
    FOREIGN KEY (`Score_id`)
    REFERENCES `mydb`.`Score` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Groupe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Groupe` (
  `id` INT NOT NULL,
  `nom` VARCHAR(45) NULL,
  `numero` INT NULL,
  `Rencontre_id` INT NOT NULL,
  `Rencontre_Score_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Rencontre_id`, `Rencontre_Score_id`),
  INDEX `fk_Groupe_Rencontre1_idx` (`Rencontre_id` ASC, `Rencontre_Score_id` ASC),
  CONSTRAINT `fk_Groupe_Rencontre1`
    FOREIGN KEY (`Rencontre_id` , `Rencontre_Score_id`)
    REFERENCES `mydb`.`Rencontre` (`id` , `Score_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Equipe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Equipe` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NULL,
  `info` VARCHAR(45) NULL,
  `numero` INT NULL,
  `Score_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Score_id`),
  INDEX `fk_Equipe_Score1_idx` (`Score_id` ASC),
  CONSTRAINT `fk_Equipe_Score1`
    FOREIGN KEY (`Score_id`)
    REFERENCES `mydb`.`Score` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Utilisateur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Utilisateur` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `identifiant` VARCHAR(45) NULL,
  `mot_de_passe` VARCHAR(45) NULL,
  `role` VARCHAR(45) NULL,
  `Rencontre_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Rencontre_id`),
  INDEX `fk_Utilisateur_Rencontre_idx` (`Rencontre_id` ASC),
  CONSTRAINT `fk_Utilisateur_Rencontre`
    FOREIGN KEY (`Rencontre_id`)
    REFERENCES `mydb`.`Rencontre` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Phase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Phase` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Contient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contient` (
  `Phase_id` INT NOT NULL,
  `Groupe_id` INT NOT NULL,
  `Groupe_Rencontre_id` INT NOT NULL,
  `Groupe_Rencontre_Score_id` INT NOT NULL,
  PRIMARY KEY (`Phase_id`, `Groupe_id`, `Groupe_Rencontre_id`, `Groupe_Rencontre_Score_id`),
  INDEX `fk_Phase_has_Groupe_Groupe1_idx` (`Groupe_id` ASC, `Groupe_Rencontre_id` ASC, `Groupe_Rencontre_Score_id` ASC),
  INDEX `fk_Phase_has_Groupe_Phase1_idx` (`Phase_id` ASC),
  CONSTRAINT `fk_Phase_has_Groupe_Phase1`
    FOREIGN KEY (`Phase_id`)
    REFERENCES `mydb`.`Phase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Phase_has_Groupe_Groupe1`
    FOREIGN KEY (`Groupe_id` , `Groupe_Rencontre_id` , `Groupe_Rencontre_Score_id`)
    REFERENCES `mydb`.`Groupe` (`id` , `Rencontre_id` , `Rencontre_Score_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Contient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Contient` (
  `Phase_id` INT NOT NULL,
  `Groupe_id` INT NOT NULL,
  `Groupe_Rencontre_id` INT NOT NULL,
  `Groupe_Rencontre_Score_id` INT NOT NULL,
  PRIMARY KEY (`Phase_id`, `Groupe_id`, `Groupe_Rencontre_id`, `Groupe_Rencontre_Score_id`),
  INDEX `fk_Phase_has_Groupe_Groupe1_idx` (`Groupe_id` ASC, `Groupe_Rencontre_id` ASC, `Groupe_Rencontre_Score_id` ASC),
  INDEX `fk_Phase_has_Groupe_Phase1_idx` (`Phase_id` ASC),
  CONSTRAINT `fk_Phase_has_Groupe_Phase1`
    FOREIGN KEY (`Phase_id`)
    REFERENCES `mydb`.`Phase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Phase_has_Groupe_Groupe1`
    FOREIGN KEY (`Groupe_id` , `Groupe_Rencontre_id` , `Groupe_Rencontre_Score_id`)
    REFERENCES `mydb`.`Groupe` (`id` , `Rencontre_id` , `Rencontre_Score_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
